{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavee/project/TODO_fastapi/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n\n      // Refresh user data if token exists but user data might be outdated\n      if (token && !parsedUser.is_admin && !parsedUser.is_active) {\n        authAPI.getCurrentUser().then(freshUserData => {\n          localStorage.setItem('user', JSON.stringify(freshUserData));\n          setUser(freshUserData);\n        }).catch(() => {\n          // Token might be expired, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setUser(null);\n        });\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login(username, password);\n      const {\n        access_token\n      } = response;\n\n      // Store token\n      localStorage.setItem('token', access_token);\n\n      // Get user information\n      const userData = await authAPI.getCurrentUser();\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      return {\n        success: true,\n        data: response\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const verifyEmail = async token => {\n    try {\n      const response = await authAPI.verifyEmail(token);\n      return {\n        success: true,\n        data: response\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Email verification failed'\n      };\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    verifyEmail,\n    isAuthenticated: !!user,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","is_admin","is_active","getCurrentUser","then","freshUserData","setItem","stringify","catch","removeItem","login","username","password","response","access_token","success","error","_error$response","_error$response$data","data","detail","register","_error$response2","_error$response2$data","logout","verifyEmail","_error$response3","_error$response3$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaibhavee/project/TODO_fastapi/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n      \n      // Refresh user data if token exists but user data might be outdated\n      if (token && !parsedUser.is_admin && !parsedUser.is_active) {\n        authAPI.getCurrentUser()\n          .then(freshUserData => {\n            localStorage.setItem('user', JSON.stringify(freshUserData));\n            setUser(freshUserData);\n          })\n          .catch(() => {\n            // Token might be expired, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            setUser(null);\n          });\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login(username, password);\n      const { access_token } = response;\n      \n      // Store token\n      localStorage.setItem('token', access_token);\n      \n      // Get user information\n      const userData = await authAPI.getCurrentUser();\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      \n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authAPI.register(userData);\n      return { success: true, data: response };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const verifyEmail = async (token) => {\n    try {\n      const response = await authAPI.verifyEmail(token);\n      return { success: true, data: response };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Email verification failed' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    verifyEmail,\n    isAuthenticated: !!user,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}